version: build.{build}
image: Visual Studio 2022

skip_commits:
  files:
    - docs/
    - misc/
    - README.md
    - LICENSE

environment:
  github_access_token:
    secure: gtEHCUmmDjYfrp/NEe2qUH3SBedD4Hc7VWVyvOOE5KmyYYQnFmtyH9sQpaD33nU5/dqeijEBdkdPzKQYuIrpmgiIt/OucnY8GoNcL6VR9WSVc1hCkhGMYLBjooeKOvBg

init:
- cmd: git config --global core.autocrlf true
- pwsh: | 
    $env:IGNORE_NORMALISATION_GIT_HEAD_MOVE = "1"
    Write-Host "IGNORE_NORMALISATION_GIT_HEAD_MOVE set to $($env:IGNORE_NORMALISATION_GIT_HEAD_MOVE)"

- pwsh: Write-Host "APPVEYOR_REPO_BRANCH $($env:APPVEYOR_REPO_BRANCH)"

before_build:
- cmd: gitversion /version
- cmd: gitversion /output buildserver /verbosity Minimal
- pwsh: Write-Host "Building DubUrl version $($env:GitVersion_SemVer)"

build_script:
  #- dotnet --info
  - dotnet build DubUrl.sln -p:version="%GitVersion_SemVer%" -c Release /p:ContinuousIntegrationBuild=true --nologo 

test_script:
- dotnet test DubUrl.Testing -c Release --test-adapter-path:. --logger:Appveyor --no-build --nologo 
- dotnet test DubUrl.OleDb.Testing -c Release --test-adapter-path:. --logger:Appveyor --no-build --nologo 
- dotnet test DubUrl.Extensions.DependencyInjection.Testing -c Release --test-adapter-path:. --logger:Appveyor --no-build --nologo 
- pwsh: |
      $force = -not(($null -eq $env:APPVEYOR_PULL_REQUEST_NUMBER) -or ("" -eq $env:APPVEYOR_PULL_REQUEST_NUMBER))
      & .\Duburl.QA\deploy-test-harness.ps1 -force:$force -exclude @("Drill", "Trino")
      if ($lastexitcode -gt 0) {
        throw "At least one of the test-suite was not successful. Stopping build."
      }

after_test:
- dotnet pack DubUrl.Core -p:version="%GitVersion_SemVer%" -c Release --include-symbols --no-build --nologo 
- dotnet pack DubUrl.OleDb -p:version="%GitVersion_SemVer%" -c Release --include-symbols --no-build --nologo 
- dotnet pack DubUrl.Extensions.DependencyInjection -p:version="%GitVersion_SemVer%" -c Release --include-symbols --no-build --nologo 

artifacts:
- path: '**\*.nupkg'
- path: '**\*.snupkg'

deploy:
- provider: NuGet
  api_key:
    secure: PTrp3h6emvTJJqdacXvOOBRAwrNqzZcXVaRp09YI8PhQqEcGXcOvSr1UeRRo8gOM
  skip_symbols: false
  artifact: /.*(\.|\.s)nupkg/
  on:
    branch: main

on_success:

  - pwsh: |
      & .\generate-scheme-info.ps1
      $exitCode = $LastExitCode
      & .\generate-odbc-driver-info.ps1
      $exitCode += $LastExitCode
      if ($exitCode -gt 0) {
        Write-Host "`tUpdating README.md ..."
        & .\generate-table-scheme.ps1
        Write-Host "`tSetting GitHub credentials ..."
        & git config --global credential.helper store
        Set-Content -Path "$HOME\.git-credentials" -Value "https://Seddryck:$($env:github_access_token)@github.com`n" -NoNewline
        & git config --global user.email "no-reply@nbiguity.io"
        & git config --global user.name "AppVeyor bot"
        Write-Host "`tCreating commit ..."
        & git add --all
        & git status
        & git pull
        & git commit -m "Update automatically generated documentation related to schemes"
        Write-Host "`tPushing commit ..."
        & git push origin
        Write-Host "`tNew commit uploaded."
      }
